{"ast":null,"code":"import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport store from '@/store';\nVue.use(VueRouter);\n//导入路由配置\nimport routes from './routes';\n//备份push方法\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace;\n//重写路由方法 \nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    //call || apply相同点:都可以调用函数一次，都可以篡改函数上下文一次\n    // 区别：call传递参数用逗号隔开，apply传递数组\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n};\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    //call || apply相同点:都可以调用函数一次，都可以篡改函数上下文一次\n    // 区别：call传递参数用逗号隔开，apply传递数组\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n};\n//配置路由\nconst router = new VueRouter({\n  routes,\n  scrollBehavior(to, from, scrollBehavior) {\n    //vue 滚动行为\n    //x y 返回值代表滚动条位置\n    return {\n      y: 0\n    };\n  }\n});\n//全局前置守卫\nrouter.beforeEach((to, from, next) => {\n  let token = store.state.user.token;\n});\nexport default router;\n//  注册完路由，所有组件都有$route $router","map":{"version":3,"names":["Vue","VueRouter","store","use","routes","originPush","prototype","push","originReplace","replace","location","resolve","reject","call","router","scrollBehavior","to","from","y","beforeEach","next","token","state","user"],"sources":["D:/MyProject/pro_sph/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\r\nimport VueRouter from \"vue-router\";\r\nimport store from '@/store'\r\nVue.use(VueRouter);\r\n//导入路由配置\r\nimport routes from './routes'\r\n//备份push方法\r\n let originPush=VueRouter.prototype.push;\r\n let originReplace=VueRouter.prototype.replace;\r\n //重写路由方法 \r\n VueRouter.prototype.push=function(location,resolve,reject){\r\n    if(resolve && reject)\r\n    {\r\n        //call || apply相同点:都可以调用函数一次，都可以篡改函数上下文一次\r\n        // 区别：call传递参数用逗号隔开，apply传递数组\r\n        originPush.call(this,location,resolve,reject)\r\n    }else{\r\n        originPush.call(this,location,()=>{},()=>{});\r\n    }\r\n }\r\n VueRouter.prototype.replace=function(location,resolve,reject){\r\n    if(resolve && reject)\r\n    {\r\n        //call || apply相同点:都可以调用函数一次，都可以篡改函数上下文一次\r\n        // 区别：call传递参数用逗号隔开，apply传递数组\r\n        originReplace.call(this,location,resolve,reject)\r\n    }else{\r\n        originReplace.call(this,location,()=>{},()=>{});\r\n    }\r\n }\r\n//配置路由\r\nconst router=new VueRouter({\r\n    routes,\r\n    scrollBehavior(to,from,scrollBehavior){\r\n        //vue 滚动行为\r\n        //x y 返回值代表滚动条位置\r\n        return {y:0}\r\n    }\r\n})\r\n//全局前置守卫\r\nrouter.beforeEach((to,from,next)=>{\r\n    let token=store.state.user.token\r\n})  \r\nexport default router\r\n//  注册完路由，所有组件都有$route $router"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,SAAS;AAC3BF,GAAG,CAACG,GAAG,CAACF,SAAS,CAAC;AAClB;AACA,OAAOG,MAAM,MAAM,UAAU;AAC7B;AACC,IAAIC,UAAU,GAACJ,SAAS,CAACK,SAAS,CAACC,IAAI;AACvC,IAAIC,aAAa,GAACP,SAAS,CAACK,SAAS,CAACG,OAAO;AAC7C;AACAR,SAAS,CAACK,SAAS,CAACC,IAAI,GAAC,UAASG,QAAQ,EAACC,OAAO,EAACC,MAAM,EAAC;EACvD,IAAGD,OAAO,IAAIC,MAAM,EACpB;IACI;IACA;IACAP,UAAU,CAACQ,IAAI,CAAC,IAAI,EAACH,QAAQ,EAACC,OAAO,EAACC,MAAM,CAAC;EACjD,CAAC,MAAI;IACDP,UAAU,CAACQ,IAAI,CAAC,IAAI,EAACH,QAAQ,EAAC,MAAI,CAAC,CAAC,EAAC,MAAI,CAAC,CAAC,CAAC;EAChD;AACH,CAAC;AACDT,SAAS,CAACK,SAAS,CAACG,OAAO,GAAC,UAASC,QAAQ,EAACC,OAAO,EAACC,MAAM,EAAC;EAC1D,IAAGD,OAAO,IAAIC,MAAM,EACpB;IACI;IACA;IACAJ,aAAa,CAACK,IAAI,CAAC,IAAI,EAACH,QAAQ,EAACC,OAAO,EAACC,MAAM,CAAC;EACpD,CAAC,MAAI;IACDJ,aAAa,CAACK,IAAI,CAAC,IAAI,EAACH,QAAQ,EAAC,MAAI,CAAC,CAAC,EAAC,MAAI,CAAC,CAAC,CAAC;EACnD;AACH,CAAC;AACF;AACA,MAAMI,MAAM,GAAC,IAAIb,SAAS,CAAC;EACvBG,MAAM;EACNW,cAAcA,CAACC,EAAE,EAACC,IAAI,EAACF,cAAc,EAAC;IAClC;IACA;IACA,OAAO;MAACG,CAAC,EAAC;IAAC,CAAC;EAChB;AACJ,CAAC,CAAC;AACF;AACAJ,MAAM,CAACK,UAAU,CAAC,CAACH,EAAE,EAACC,IAAI,EAACG,IAAI,KAAG;EAC9B,IAAIC,KAAK,GAACnB,KAAK,CAACoB,KAAK,CAACC,IAAI,CAACF,KAAK;AACpC,CAAC,CAAC;AACF,eAAeP,MAAM;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}