{"ast":null,"code":"import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nVue.use(VueRouter);\n//引入路由组件\nimport Home from '../pages/Home';\nimport Login from '../pages/Login';\nimport Search from '../pages/Search';\nimport Register from '../pages/Register';\n//备份push方法\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace;\n//重写路由方法 \nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    //call || apply相同点:都可以调用函数一次，都可以篡改函数上下文一次\n    // 区别：call传递参数用逗号隔开，apply传递数组\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n};\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    //call || apply相同点:都可以调用函数一次，都可以篡改函数上下文一次\n    // 区别：call传递参数用逗号隔开，apply传递数组\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n};\n//配置路由\nconst router = new VueRouter({\n  routes: [{\n    path: \"/home\",\n    component: Home,\n    meta: {\n      show: true\n    }\n  }, {\n    path: \"/Login\",\n    component: Login,\n    meta: {\n      show: false\n    }\n  }, {\n    path: \"/Search/:keyword?\",\n    //指定params 参数keyword 可传可不传\n    component: Search,\n    meta: {\n      show: true\n    },\n    name: 'search'\n    //props 简化路由使用参数    \n    //props:true //只能传params 参数\n    //props:{a:'a'} 额外传参\n    // props(){\n    //     return{\n\n    //     }\n    // }能传params query参数\n  }, {\n    path: \"/Register\",\n    component: Register,\n    meta: {\n      show: false\n    }\n  }, {\n    //重定向\n    path: \"*\",\n    redirect: '/home'\n  }]\n});\nexport default router;\n//  注册完路由，所有组件都有$route $router","map":{"version":3,"names":["Vue","VueRouter","use","Home","Login","Search","Register","originPush","prototype","push","originReplace","replace","location","resolve","reject","call","router","routes","path","component","meta","show","name","redirect"],"sources":["D:/MyProject/pro_sph/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\r\nimport VueRouter from \"vue-router\";\r\nVue.use(VueRouter);\r\n//引入路由组件\r\nimport Home from '../pages/Home'\r\nimport Login from '../pages/Login'\r\nimport Search from '../pages/Search'\r\nimport Register from '../pages/Register'\r\n//备份push方法\r\n let originPush=VueRouter.prototype.push;\r\n let originReplace=VueRouter.prototype.replace;\r\n //重写路由方法 \r\n VueRouter.prototype.push=function(location,resolve,reject){\r\n    if(resolve && reject)\r\n    {\r\n        //call || apply相同点:都可以调用函数一次，都可以篡改函数上下文一次\r\n        // 区别：call传递参数用逗号隔开，apply传递数组\r\n        originPush.call(this,location,resolve,reject)\r\n    }else{\r\n        originPush.call(this,location,()=>{},()=>{});\r\n    }\r\n }\r\n VueRouter.prototype.replace=function(location,resolve,reject){\r\n    if(resolve && reject)\r\n    {\r\n        //call || apply相同点:都可以调用函数一次，都可以篡改函数上下文一次\r\n        // 区别：call传递参数用逗号隔开，apply传递数组\r\n        originReplace.call(this,location,resolve,reject)\r\n    }else{\r\n        originReplace.call(this,location,()=>{},()=>{});\r\n    }\r\n }\r\n//配置路由\r\nconst router=new VueRouter({\r\n    routes:[\r\n        {\r\n            path:\"/home\",\r\n            component:Home,\r\n            meta:{show:true}\r\n        },\r\n        {\r\n            path:\"/Login\",\r\n            component:Login,\r\n            meta:{show:false}\r\n        },\r\n        {\r\n            path:\"/Search/:keyword?\",//指定params 参数keyword 可传可不传\r\n            component:Search,\r\n            meta:{show:true},\r\n            name:'search',\r\n            //props 简化路由使用参数    \r\n            //props:true //只能传params 参数\r\n            //props:{a:'a'} 额外传参\r\n            // props(){\r\n            //     return{\r\n\r\n            //     }\r\n            // }能传params query参数\r\n            \r\n        },\r\n        {\r\n            path:\"/Register\",\r\n            component:Register,\r\n            meta:{show:false}\r\n        },\r\n        {//重定向\r\n            path:\"*\",\r\n            redirect:'/home'\r\n        }\r\n    ]\r\n})\r\nexport default router\r\n//  注册完路由，所有组件都有$route $router"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClCD,GAAG,CAACE,GAAG,CAACD,SAAS,CAAC;AAClB;AACA,OAAOE,IAAI,MAAM,eAAe;AAChC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC;AACC,IAAIC,UAAU,GAACN,SAAS,CAACO,SAAS,CAACC,IAAI;AACvC,IAAIC,aAAa,GAACT,SAAS,CAACO,SAAS,CAACG,OAAO;AAC7C;AACAV,SAAS,CAACO,SAAS,CAACC,IAAI,GAAC,UAASG,QAAQ,EAACC,OAAO,EAACC,MAAM,EAAC;EACvD,IAAGD,OAAO,IAAIC,MAAM,EACpB;IACI;IACA;IACAP,UAAU,CAACQ,IAAI,CAAC,IAAI,EAACH,QAAQ,EAACC,OAAO,EAACC,MAAM,CAAC;EACjD,CAAC,MAAI;IACDP,UAAU,CAACQ,IAAI,CAAC,IAAI,EAACH,QAAQ,EAAC,MAAI,CAAC,CAAC,EAAC,MAAI,CAAC,CAAC,CAAC;EAChD;AACH,CAAC;AACDX,SAAS,CAACO,SAAS,CAACG,OAAO,GAAC,UAASC,QAAQ,EAACC,OAAO,EAACC,MAAM,EAAC;EAC1D,IAAGD,OAAO,IAAIC,MAAM,EACpB;IACI;IACA;IACAJ,aAAa,CAACK,IAAI,CAAC,IAAI,EAACH,QAAQ,EAACC,OAAO,EAACC,MAAM,CAAC;EACpD,CAAC,MAAI;IACDJ,aAAa,CAACK,IAAI,CAAC,IAAI,EAACH,QAAQ,EAAC,MAAI,CAAC,CAAC,EAAC,MAAI,CAAC,CAAC,CAAC;EACnD;AACH,CAAC;AACF;AACA,MAAMI,MAAM,GAAC,IAAIf,SAAS,CAAC;EACvBgB,MAAM,EAAC,CACH;IACIC,IAAI,EAAC,OAAO;IACZC,SAAS,EAAChB,IAAI;IACdiB,IAAI,EAAC;MAACC,IAAI,EAAC;IAAI;EACnB,CAAC,EACD;IACIH,IAAI,EAAC,QAAQ;IACbC,SAAS,EAACf,KAAK;IACfgB,IAAI,EAAC;MAACC,IAAI,EAAC;IAAK;EACpB,CAAC,EACD;IACIH,IAAI,EAAC,mBAAmB;IAAC;IACzBC,SAAS,EAACd,MAAM;IAChBe,IAAI,EAAC;MAACC,IAAI,EAAC;IAAI,CAAC;IAChBC,IAAI,EAAC;IACL;IACA;IACA;IACA;IACA;;IAEA;IACA;EAEJ,CAAC,EACD;IACIJ,IAAI,EAAC,WAAW;IAChBC,SAAS,EAACb,QAAQ;IAClBc,IAAI,EAAC;MAACC,IAAI,EAAC;IAAK;EACpB,CAAC,EACD;IAAC;IACGH,IAAI,EAAC,GAAG;IACRK,QAAQ,EAAC;EACb,CAAC;AAET,CAAC,CAAC;AACF,eAAeP,MAAM;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}