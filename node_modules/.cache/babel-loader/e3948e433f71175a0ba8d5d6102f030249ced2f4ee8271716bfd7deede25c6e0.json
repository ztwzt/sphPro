{"ast":null,"code":"//对于axios进行二次封装--使用请求和响应拦截器\nimport axios from 'axios';\n//引入进度条\nimport nprogess from 'nprogress';\n//映引入进度条样式\nimport 'nprogress/nprogress.css';\nimport store from '../store';\n//创建一个axios实例对象\nconst requests = axios.create({\n  //基础路径\n  baseURL: 'api',\n  timeout: 5000 //5s\n});\n//请求拦截器 --发出请求之前\nrequests.interceptors.request.use(config => {\n  //进度条开始\n  nprogess.start();\n  if (store.state.detail.uuid_token) {\n    //请求头加字段\n    config.headers.userTempId = store.state.detail.uuid_token;\n  }\n  //是否徐需要携带toekn\n  if (s) {}\n  //config:配置对象，包含Headers 请求头\n  return config;\n});\n\n//响应拦截器--收到响应之前\nrequests.interceptors.response.use(res => {\n  //进度条结束\n  nprogess.done();\n  //成功回调\n  return res.data;\n}, err => {\n  //失败回调\n  return Promise.reject(new Error('faile'));\n});\nexport default requests;","map":{"version":3,"names":["axios","nprogess","store","requests","create","baseURL","timeout","interceptors","request","use","config","start","state","detail","uuid_token","headers","userTempId","s","response","res","done","data","err","Promise","reject","Error"],"sources":["D:/MyProject/pro_sph/src/api/request.js"],"sourcesContent":["//对于axios进行二次封装--使用请求和响应拦截器\r\nimport axios from 'axios'\r\n//引入进度条\r\nimport nprogess from 'nprogress'\r\n//映引入进度条样式\r\nimport 'nprogress/nprogress.css'\r\nimport store from '../store'\r\n//创建一个axios实例对象\r\n const requests =axios.create({\r\n    //基础路径\r\n    baseURL:'api',\r\n    timeout:5000,//5s\r\n\r\n})\r\n//请求拦截器 --发出请求之前\r\nrequests.interceptors.request.use((config)=>{\r\n    //进度条开始\r\n    nprogess.start()    \r\n    if(store.state.detail.uuid_token){\r\n        //请求头加字段\r\n        config.headers.userTempId = store.state.detail.uuid_token\r\n    }\r\n    //是否徐需要携带toekn\r\n    if(s){\r\n\r\n    }\r\n    //config:配置对象，包含Headers 请求头\r\n    return config;\r\n})\r\n\r\n//响应拦截器--收到响应之前\r\nrequests.interceptors.response.use(\r\n    (res)=>{\r\n        //进度条结束\r\n        nprogess.done()\r\n        //成功回调\r\n        return res.data\r\n    },\r\n    (err)=>{\r\n        //失败回调\r\n        return Promise.reject(new Error('faile'))\r\n    }\r\n)\r\nexport default requests"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,QAAQ,MAAM,WAAW;AAChC;AACA,OAAO,yBAAyB;AAChC,OAAOC,KAAK,MAAM,UAAU;AAC5B;AACC,MAAMC,QAAQ,GAAEH,KAAK,CAACI,MAAM,CAAC;EAC1B;EACAC,OAAO,EAAC,KAAK;EACbC,OAAO,EAAC,IAAI,CAAC;AAEjB,CAAC,CAAC;AACF;AACAH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAG;EACxC;EACAT,QAAQ,CAACU,KAAK,CAAC,CAAC;EAChB,IAAGT,KAAK,CAACU,KAAK,CAACC,MAAM,CAACC,UAAU,EAAC;IAC7B;IACAJ,MAAM,CAACK,OAAO,CAACC,UAAU,GAAGd,KAAK,CAACU,KAAK,CAACC,MAAM,CAACC,UAAU;EAC7D;EACA;EACA,IAAGG,CAAC,EAAC,CAEL;EACA;EACA,OAAOP,MAAM;AACjB,CAAC,CAAC;;AAEF;AACAP,QAAQ,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC7BU,GAAG,IAAG;EACH;EACAlB,QAAQ,CAACmB,IAAI,CAAC,CAAC;EACf;EACA,OAAOD,GAAG,CAACE,IAAI;AACnB,CAAC,EACAC,GAAG,IAAG;EACH;EACA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC7C,CACJ,CAAC;AACD,eAAetB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}